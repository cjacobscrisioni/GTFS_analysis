container LoadRoads: using = "Definitions;" {
	
	
	
	unit<uint32> Read_lines_fss 
	:   StorageName = "='%SourceDataProjDir%/data/_roadnetworks/streets_base/20231109_Europe.fss'"
	,	StorageReadOnly = "True"
	{
		attribute<wgs84>                        geometry (arc);
		attribute<string>                       highway;
		attribute<string>                       other_tags;
		attribute<int32>                        z_order;
		attribute<roadtype> roadtype_rel       := switch(
																			case(IsCarFerry, roadtype/v/ferry)
																			, rlookup(highway, roadtype/name)
																		);
																		
		attribute<bool>                         IsWalkable := roadtype/IsWalkable[roadtype_rel];
		
		attribute<bool>                         IsOneDirection    := strcount(other_tags, '"oneway"=>"yes"') > 0;
		attribute<bool>                         IsFerry           := strcount(other_tags, '"route"=>"ferry"') > 0;
		attribute<bool>                         IsCarFerry        := strcount(other_tags, '"route"=>"ferry"') > 0 && strcount(other_tags, '"motor_vehicle"=>"yes"') > 0;
		
		unit<uint8> MaxSpeeds : nrofrows = 15
		{
			attribute<string> name  := 's'+speed;
			attribute<string> speed : ['10','20','30','40','50','60','70','80','90','100','110','120','130','140','150'];
			attribute<string> expr  := '"maxspeed"=>"'+speed+'"';
			attribute<string> label := name;
		}
		
		container ExtractMaxSpeeds :=
			for_each_nedv(
				MaxSpeeds/name
				, 'strcount(other_tags, '+quote(MaxSpeeds/expr)+')'
				, .
				, uint32
			);
		attribute<MaxSpeeds>                       KPH_from_source_rel    := ='argmax_ifdefined_uint8('+AsItemList('ExtractMaxSpeeds/'+MaxSpeeds/name+' > 0 ? ExtractMaxSpeeds/'+MaxSpeeds/name+' : null_u')+')';
		attribute<km_hr>                           KPH_from_source        := value(MaxSpeeds/speed, km_hr)[KPH_from_source_rel];
		attribute<km_hr>                           KPH                    := MakeDefined(KPH_from_source, roadtype/CarSpeedOutside[roadtype_rel]);
	}
	
	
	unit<UInt8> roadtype : NrOfRows = 78
	{
		attribute<String>       Name                 := Label;
		attribute<km_hr>        CarSpeedOutside      := Elements/Text[value(UInt32(ID(.))* nrAttr + 0, Elements)][km_hr];
		attribute<km_hr>        CarSpeedInside       := Elements/Text[value(UInt32(ID(.))* nrAttr + 1, Elements)][km_hr];
		attribute<km_hr>        BikeSpeed            := Elements/Text[value(UInt32(ID(.))* nrAttr + 2, Elements)][km_hr];
		attribute<bool>         IsMain               := bool(Elements/Text[value(UInt32(ID(.))* nrAttr + 3, Elements)]);
		attribute<String>       Label                := Elements/Text[value(UInt32(ID(.))* nrAttr + 5, Elements)], DialogType = "LabelText";
		attribute<bool>			IsWalkable			 := bool(Elements/Text[value(UInt32(ID(.))* nrAttr + 8, Elements)]);
		attribute<bool>         IsPartOfCarNetwork    := CarSpeedInside  > value(1, km_hr);

		parameter<uint32> nrAttr := 9;
		unit<UInt32> Elements := Range(uint32, 0, nrAttr*#.)
		{
			attribute<String> Text:
			[
				//Car speed outside,Car speed inside,Bike speed, IsMain, group,Label, Truck speed outside, Truck speed inside, walkable,
				' 30',' 30','15','True' ,'2','access','50','30','True',
				' 40',' 40','15','False','2','binnenweg','50','30','True',
				'  1','  1','10','False','0','bridleway',' -1',' -1','True',
				'  1','  1',' 1','False','3','bus_guideway',' -1',' -1','True',
				'  1','  1',' 1','False','3','bus_stop',' -1',' -1','True',
				'  1','  1',' 1','False','5','closed',' -1',' -1','True',
				'  1','  1',' 1','False','4','construction',' -1',' -1','False',
				'  1','  1',' 1','False','2','crossing',' -1',' -1','True',
				'  1','  1','15','False','1','cycleway',' -1',' -1','True',
				'  1','  1','15','False','1','cycleway;service',' -1',' -1','True',
				'  1','  1',' 1','False','5','disused',' -1',' -1','True',
				'  1','  1','10','False','0','dog track',' -1',' -1','True',
				'  1','  1','10','False','2','driveway',' -1',' -1','True',
				'  1','  1','15','False','1','fi',' -1',' -1','True',
				'  1','  1','15','False','1','fiets-/voetpad',' -1',' -1','True',
				'  1','  1',' 1','False','3','FIXME',' -1',' -1','True',
				'  1','  1',' 1','False','0','footpath',' -1',' -1','True',
				'  1','  1',' 1','False','0','footway',' -1',' -1','True',
				'  1','  1',' 1','False','2','gate',' -1',' -1','True',
				' 20',' 20','15','False','2','living_street','20','20','True',
				' 30',' 30','15','False','2','local','20','20','True',
				' 40',' 40','15','False','2','minor','50','30','True',
				'  1','  1','15','False','0','Molenpad',' -1',' -1','True',
				'100',' 90',' 1','True', '2','motorway','80','70','False',
				' 60',' 50',' 1','True', '2','motorway_link','60','50','False',
				'  1','  1',' 1','False','5','no_track_anymore',' -1',' -1','True',
				'  1','  1',' 1','False','0','pah',' -1',' -1','True',
				'  1','  1',' 1','False','0','pat',' -1',' -1','True',
				'  1','  1',' 1','False','0','path',' -1',' -1','True',
				'  1','  1',' 1','False','0','pedestrian',' -1',' -1','True',
				'  1','  1',' 1','False','3','platform',' -1',' -1','True',
				' 75',' 40',' 1','True', '2','primary','70','40','False',
				' 55',' 35',' 1','True', '2','primary_link','65','35','False',
				'  1','  1',' 1','False','2','private','-1','-1','True',
				'  1','  1',' 1','False','4','proposed','-1','-1','False',
				'  1','  1',' 1','False','2','race_track','-1','-1','False',
				'  1','  1',' 1','False','2','raceway','-1','-1','False',
				'  1','  1',' 1','False','5','removed?','-1','-1','True',
				' 30',' 30','15','False','2','res','20','20','True',
				' 30',' 30','15','False','2','residential','20','20','True',
				' 30',' 30','15','False','2','residential;uncl','20','20','True',
				' 20',' 20',' 1','False','2','rest_area','20','20','True',
				' 40',' 40','15','False','2','road','50','30','True',
				' 70',' 40','15','True', '2','secondary','70','40','True',
				' 50',' 30',' 1','True', '2','secondary_link','65','35','True',
				' 10',' 10','10','False','2','service','10','10','True',
				' 10',' 10','10','False','2','service; unclass','10','10','True',
				' 10',' 10','10','False','2','services','10','10','True',
				'  1','  1',' 1','False','3','stairs','-1','-1','True',
				'  1','  1',' 1','False','3','steps','-1','-1','True',
				' 50',' 40','15','False','2','tertiary','50','30','True',
				' 50',' 40','15','False','2','tertiary;unclass','50','30','True',
				' 30',' 30','15','False','2','tertiary_link','45','25','True',
				'  1','  1',' 1','False','2','track','-1','-1','True',
				'  1','  1',' 1','False','3','traffic_signals','-1','-1','True',
				'  1','  1',' 1','False','0','trail','-1','-1','True',
				'100',' 90',' 1','True', '2','trunk','80','70','False',
				' 90',' 80',' 1','True', '2','trunk_link','60','50','False',
				' 20',' 20','15','False','2','turning_circle','10','10','True',
				' 70',' 40','15','True', '2','unclassified','60','30','True',
				' 70',' 40','15','False','2','undefined','60','30','True',
				' 10',' 10',' 5','False','0','unpaved','10','10','True',
				' 10',' 10',' 5','False','2','unpaved road','10','10','True',
				' 10',' 10',' 5','False','0','unsurfaced','10','10','True',
				'  1','  1',' 1','False','3','virtual','-1','-1','False',
				'  1','  1',' 1','False','1','walkway','-1','-1','True',
				'  1','  1',' 1','False','1','Weddeloop','-1','-1','True',
				'  1','  1',' 1','False','3','ún','-1','-1','True',
				'  7','  7',' 7','False','3','texel_ferry','7','7','True',
				' 25',' 25','15','False','3','connectlink','25','25','True',
				'  5','  5',' 5','False','3','riverferry','5','5','True',
				' 15',' 15','15','False','3','vlieland_ferry','13','13','True',
				' 15',' 15','15','False','3','vlieland_terschelling','25','25','True',
				' 13',' 13','13','False','3','terschelling_ferry','25','25','True',
				' 10',' 10','10','False','3','ameland_ferry','13','13','True',
				'  7','  7',' 7','False','3','schiermonnikoog_ferry','11','11','True',
				'  7','  7',' 7','False','3','ferry','10','10','True',
				'120','110',' 1','True' ,'2','motorway_abroad','80','70','False'
			];
		}
		
		container V := for_each_nedv(replace(name,';','','ú','u',' ','_','-','_','?','','/',''), String(ID(.))+'[..]', void, .);
	}
}